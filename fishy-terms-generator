<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Random Fishy Term Picker</title>
    <style>
        body {
            text-align: center;
            margin: 0;
            padding: 0;
            font-family: Oswald, sans-serif;
            background-color: transparent;
        }

        #randomTerm {
            font-size: 20px;
            font-weight: bold;
            color: #fff;
            margin-bottom: 50px;
            opacity: 1;
        }

        button {
            background-color: #f7ce3b;
            color: #000;
            border: 2px white;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 1em;
            cursor: pointer;
            box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        }

        /* Add the flashing animation styles */
        .flash {
            animation: flashAnimation 1s linear;
        }

        @keyframes flashAnimation {
            0% {
                opacity: 0;
            }
            50% {
                opacity: 1;
            }
            100% {
                opacity: 0;
            }
        }
    </style>
</head>
<body>

<p id="randomTerm"></p>

<button onclick="getRandomFishyTerm()">Generate Silly Term</button>

<script>
async function fetchFishyTerms() {
    try {
        const sheetId = '1KyBAn6YqlJGOtBXx4J32MjP6teYCw-0PDOW9PYusCAo';
        const response = await fetch(`https://docs.google.com/spreadsheets/d/${sheetId}/pub?output=csv`);
        const data = await response.text();
        const rows = data.split('\n').map(row => row.split(','));
        const headerRow = rows[0].map(column => column.trim());
        const termColumnIndex = headerRow.indexOf('term');
        const keywordsColumnIndex = headerRow.indexOf('keywords');

        if (termColumnIndex !== -1 && keywordsColumnIndex !== -1) {
            const fishyTerms = rows.slice(1).filter(row => row[keywordsColumnIndex].toLowerCase().includes('fishy')).map(row => row[termColumnIndex].toUpperCase());
            return fishyTerms;
        } else {
            console.error('Columns "term" or "keywords" not found in the sheet.');
            return [];
        }
    } catch (error) {
        console.error('Error fetching fishy terms:', error);
        return [];
    }
}

function getRandomFishyTerm() {
    fetchFishyTerms().then(fishyTerms => {
        if (fishyTerms.length > 0) {
            // Display the random fishy term
            document.getElementById('randomTerm').innerText = '';

            // Toggle the flashing animation class
            document.getElementById('randomTerm').classList.toggle('flash');

            // Schedule the animation and final display
            setTimeout(() => {
                let startTime;
                function animate() {
                    const elapsed = Date.now() - startTime;
                    const termIndex = Math.floor((elapsed / 50) % fishyTerms.length);

                    document.getElementById('randomTerm').innerText = fishyTerms[termIndex];

                    if (elapsed < 2000) {
                        requestAnimationFrame(animate);
                    } else {
                        // Clear the flashing animation class
                        document.getElementById('randomTerm').classList.remove('flash');

                        // Display the final random fishy term
                        const randomIndex = Math.floor(Math.random() * fishyTerms.length);
                        const randomFishyTerm = fishyTerms[randomIndex];
                        document.getElementById('randomTerm').innerText = randomFishyTerm;

                        // Add a flash after the final selection
                        document.getElementById('randomTerm').classList.add('flash');
                    }
                }

                startTime = Date.now();
                animate();
            }, 100); // Adjusted timeout for initial flashing
        } else {
            document.getElementById('randomTerm').innerText = 'No fishy terms available';
        }
    });
}
</script>

</body>
</html>
